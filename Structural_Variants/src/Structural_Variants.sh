#!/bin/bash
# Structural_Variants 0.0.1
# Generated by dx-app-wizard.

main() {

    dx download "$Consensus_Tumor_BAM" -o consensus.tumor.bam
    dx download "$reference" -o dnaref.tar.gz

    tar xvfz dnaref.tar.gz

    if [ -n "$Consensus_Normal_BAM" ]
    then
        dx download "$Consensus_Normal_BAM" -o Consensus_Normal_BAM
    fi

    docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 bash /usr/local/bin/indexbams.sh

    if [[ -z "$Consensus_Normal_BAM" ]]
    then

        if [[ "${algo}" == "pindel" ]]
        then
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bash /usr/local/bin/svcalling.sh -r dnaref -b consensus.tumor.bam -p ${pair_id} -l dnaref/itd_genes.bed -a pindel
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 perl /usr/local/bin/filter_pindel.pl -d ${pair_id}.pindel_tandemdup.vcf.gz -s ${pair_id}.pindel_sv.vcf.gz -i ${pair_id}.pindel_indel.vcf.gz
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bgzip ${pair_id}.pindel_indel.pass.vcf
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bgzip ${pair_id}.pindel_tandemdup.pass.vcf
            mv ${pair_id}.pindel_indel.pass.vcf.gz ${pair_id}.pindel.vcf.gz
            grep '#CHROM' ${pair_id}.pindel_sv.pass.vcf > ${pair_id}.dna.genefusion.txt
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 sh -c "cat ${pair_id}.pindel_sv.pass.vcf | ${SNPEFF_HOME}/scripts/vcfEffOnePerLine.pl | java -jar ${SPNEFF_HOME}/SnpSift.jar extractFields - CHROM POS END ANN[*].EFFECT ANN[*].GENE ANN[*].HGVS_C ANN[*].HGVS_P GEN[*] | grep -E 'CHROM|gene_fusion' | uniq >> ${pair_id}.dna.genefusion.txt"
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bgzip ${pair_id}.pindel_sv.pass.vcf
        else
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bash /usr/local/bin/svcalling.sh -r dnaref -b consensus.tumor.bam -p ${pair_id} -a ${algo}
        fi

    else

        if [[ "${algo}" == "pindel" ]]
        then
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bash /usr/local/bin/svcalling.sh -r dnaref -p ${pair_id} -l dnaref/itd_genes.bed -a pindel
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 perl /usr/local/bin/filter_pindel.pl -d ${pair_id}.pindel_tandemdup.vcf.gz -s ${pair_id}.pindel_sv.vcf.gz -i ${pair_id}.pindel_indel.vcf.gz
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bgzip ${pair_id}.p
indel_indel.pass.vcf
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bgzip ${pair_id}.p
indel_tandemdup.pass.vcf
            mv ${pair_id}.pindel_indel.pass.vcf.gz ${pair_id}.pindel.vcf.gz
            grep '#CHROM' ${pair_id}.pindel_sv.pass.vcf > ${pair_id}.dna.genefusion.txt
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 sh -c "cat ${pair_id}.pindel_sv.pass.vcf | ${SNPEFF_HOME}/scripts/vcfEffOnePerLine.pl | java -jar ${SPNEFF_HOME}/SnpSift.jar extractFields - CHROM POS END ANN[*].EFFECT ANN[*].GENE ANN[*].HGVS_C ANN[*].HGVS_P GEN[*] | grep -E 'CHROM|gene_fusion' | uniq >> ${pair_id}.dna.genefusion.txt"
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bgzip ${pair_id}.pindel_sv.pass.vcf
        elif [[ "${algo}" == "checkmates" ]]
        then
            docker run -v ${PWD}:/data docker.io/goalconsortium/vcfannot:v1 python /usr/local/bin/ncm.py -B -d ./ -bed dnaref/NGSCheckMate.bed -O ./ -N ${pair_id}
            docker run -v ${PWD}:/data docker.io/goalconsortium/vcfannot:v1 perl /usr/local/bin/sequenceqc_somatic.pl -r dnaref -i ${pair_id}_all.txt -o ${pair_id}.sequence.stats.txt
        else
            docker run -v ${PWD}:/data docker.io/goalconsortium/somatic_variant:v1 bash /usr/local/bin/svcalling.sh -r dnaref -x 'tumor' -y 'normal' -b consensus.tumor.bam -n consensus.normal.bam -p ${pair_id} -a ${algo}
        fi

    fi

    if [[ "${algo}" == "checkmates" ]]
    then
        matched=$(dx upload ${pair_id}_matched.txt --brief)
        all=$(dx upload ${pair_id}_all.txt --brief)

        dx-jobutil-add-output matched "$matched" --class=file
        dx-jobutil-add-output all "$all" --class=file
    elif [[ "${algo}" == "pindel" ]]
    then
        vcf=$(dx upload ${pair_id}.${algo}.vcf.gz --brief)
        svvcf=$(dx upload ${pair_id}.${algo}_sv.pass.vcf.gz --brief)
        tdvcf=$(dx upload ${pair_id}.${algo}_tandemdup.pass.vcf.gz --brief)
        genefusion=$(dx upload ${pair_id}.dna.genefusion.txt --brief)

        dx-jobutil-add-output vcf "$vcf" --class=file
        dx-jobutil-add-output svvcf "$svvcf" --class=file
        dx-jobutil-add-output tdvcf "$tdvcf" --class=file
        dx-jobutil-add-output genefusion "$genefusion" --class=file
    else
        vcf=$(dx upload ${pair_id}.${algo}.vcf.gz --brief)

        dx-jobutil-add-output vcf "$vcf" --class=file
    fi
}
