#!/bin/bash
# QC_Stats 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    dx download "$consensus_bam" -o consensus.bam
    dx download "$trimreport" -o trimreport.txt
    dx download "$dedupcov" -o dedupcov.txt
    dx download "$ref_file" -o reference.tar.gz

    tar xvfz reference.tar.gz
    gunzip reference/genome.fa.gz

    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 java -XX:ParallelGCThreads=1 -Djava.io.tmpdir=./ -Xmx16g  -jar /usr/local/bin/picard.jar MarkDuplicates BARCODE_TAG=RX I=consensus.bam O=${pair_id}.dedup.bam M=${pair_id}.dedup.stat.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 samtools index -@ 1 ${pair_id}.dedup.bam

    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 samtools flagstat ${pair_id}.dedup.bam > ${pair_id}.flagstat.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 samtools view -@ 1 -b -L hemepanelV3.bed -o ${pair_id}.ontarget.bam ${pair_id}.dedup.bam
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 samtools index -@ 1 ${pair_id}.ontarget.bam
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 samtools flagstat ${pair_id}.ontarget.bam > ${pair_id}.ontarget.flagstat.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 java -Xmx64g -jar /usr/local/bin/picard.jar CollectAlignmentSummaryMetrics R=reference/genome.fa I=${pair_id}.ontarget.bam OUTPUT=${pair_id}.alignmentsummarymetrics.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 java -Xmx64g -XX:ParallelGCThreads=1 -jar /usr/local/bin/picard.jar EstimateLibraryComplexity I=${pair_id}.dedup.bam OUTPUT=${pair_id}.libcomplex.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 sh -c "samtools view  -@ 1 -b -q 1 ${pair_id}.dedup.bam | bedtools coverage -sorted -hist -g reference/genomefile.txt -b stdin -a hemepanelV3.bed > ${pair_id}.mapqualcov.txt"
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 samtools view -@ 1 ${pair_id}.dedup.bam | awk '{sum+=$5} END { print "Mean MAPQ =",sum/NR }' > ${pair_id}.meanmap.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 java -Xmx64g -jar /usr/local/bin/picard.jar CollectInsertSizeMetrics INPUT=${pair_id}.dedup.bam HISTOGRAM_FILE=${pair_id}.hist.ps REFERENCE_SEQUENCE=reference/genome.fa OUTPUT=${pair_id}.hist.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 bedtools coverage -sorted -g reference/genomefile.txt -a hemepanelV3.bed -b ${pair_id}.dedup.bam -hist > ${pair_id}.covhist.txt
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 grep ^all ${pair_id}.covhist.txt >  ${pair_id}.genomecov.txt

    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 perl /usr/local/bin/sequenceqc_alignment_withumi.pl -r reference ${pair_id}.genomecov.txt

    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    seqstats=$(dx upload ${pair_id}.sequence.stats.txt --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output seqstats "$seqstats" --class=file
}
