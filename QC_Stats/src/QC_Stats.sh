#!/bin/bash
# QC_Stats 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    dx download "$consensus_bam" -o consensus.bam
    dx download "$capture_bed" -o capture.bed
    dx download "$trimreport" -o ${pair_id}.trimreport.txt
    dx download "$dedupcov" -o ${pair_id}.dedupcov.txt
    dx download "$ref_file" -o reference.tar.gz
    dx download "$concat_ref_file" -o concat.tar.gz

    tar xvfz reference.tar.gz
    gunzip reference/genome.fa.gz
    tar xvfz concat.tar.gz

    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 bash /usr/local/bin/markdups.sh -a picard_umi -b consensus.bam -p ${pair_id}
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 bash /usr/local/bin/bamqc.sh -c capture.bed -n dna -r reference -b ${pair_id}.dedup.bam -p ${pair_id}
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 perl /usr/local/bin/sequenceqc_alignment_withumi.pl -r reference ${pair_id}.genomecov.txt

    alignstats=$(dx upload ${pair_id}.flagstat.txt --brief)
    meanmap=$(dx upload ${pair_id}.meanmap.txt --brief)
    libcomplex=$(dx upload ${pair_id}.libcomplex.txt --brief)
    insertsize=$(dx upload ${pair_id}.hist.txt --brief)
    alignmentsummarymetrics=$(dx upload ${pair_id}.alignmentsummarymetrics.txt --brief)
    genomecov=$(dx upload ${pair_id}.genomecov.txt --brief)
    covhist=$(dx upload ${pair_id}.covhist.txt --brief)
    lowcapcovstat=$(dx upload ${pair_id}_lowcoverage.txt --brief)
    exoncapcovstat=$(dx upload ${pair_id}_exoncoverage.txt --brief)
    mapqualcov=$(dx upload ${pair_id}.mapqualcov.txt --brief)
    seqstats=$(dx upload ${pair_id}.sequence.stats.txt --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output alignstats "$alignstats" --class=file
    dx-jobutil-add-output meanmap "$meanmap" --class=file
    dx-jobutil-add-output libcomplex "$libcomplex" --class=file
    dx-jobutil-add-output insertsize "$insertsize" --class=file
    dx-jobutil-add-output alignmentsummarymetrics "$alignmentsummarymetrics" --class=file
    dx-jobutil-add-output genomecov "$genomecov" --class=file
    dx-jobutil-add-output covhist "$covhist" --class=file
    dx-jobutil-add-output lowcapcovstat "$lowcapcovstat" --class=file
    dx-jobutil-add-output exoncapcovstat "$exoncapcovstat" --class=file
    dx-jobutil-add-output mapqualcov "$mapqualcov" --class=file
    dx-jobutil-add-output seqstats "$seqstats" --class=file
}
