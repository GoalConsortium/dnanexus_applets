#!/bin/bash
# strelka 0.0.1
# Generated by dx-app-wizard.

main() {

    dx download "$Consensus_Tumor_BAM" -o tumor.bam
    dx download "$reference" -o dnaref.tar.gz

    if [[ -z $pair_id ]]
    then
        pair_id='seq'
    fi

    tar xvfz reference.tar.gz
    gunzip reference/genome.fa.gz

    mkdir manta strelka

    if [[ -z $Consensus_Normal_BAM ]]
    then
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 configManta.py --bam tumor.bam --referenceFasta reference/genome.fa --exome --runDir manta
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 manta/runWorkflow.py -m local -j 1
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 configureStrelkaGermlineWorkflow.py --bam tumor.bam --referenceFasta reference/genome.fa --exome --indelCandidates manta/results/variants/candidateSmallIndels.vcf.gz --runDir strelka
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 strelka/runWorkflow.py -m local -j 1
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 bcftools norm -c s -f reference/genome.fa -w 10 -O z -o ${pair_id}.strelka2.vcf.gz strelka/results/variants/variants.vcf.gz
    else
        dx download "$Consensus_Normal_BAM" -o normal.bam
        dx download "$Consensus_Normal_BAM_index" -o normal.bam.bai

        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 configManta.py --normalBam normal.bam --tumorBam tumor.bam --referenceFasta reference/genome.fa --runDir manta
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 manta/runWorkflow.py -m local -j 8
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 configureStrelkaSomaticWorkflow.py --normalBam normal.bam --tumorBam tumor.bam --referenceFasta reference/genome.fa --targeted --indelCandidates manta/results/variants/candidateSmallIndels.vcf.gz --runDir strelka
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 strelka/runWorkflow.py -m local -j 8
        docker run -v ${PWD}:/data docker.io/goalconsortium/variantcalling:v1 sh -c "vcf-concat strelka/results/variants/*.vcf.gz | vcf-annotate -n --fill-type -n | vcf-sort | java -jar /usr/local/bin/SnpSift.jar filter \"(GEN[*].DP >= 10)\" | perl -pe \"s/TUMOR/${pair_id}/g\" | perl -pe \"s/NORMAL/${pair_id}/g\" | bgzip > ${pair_id}.strelka2.vcf.gz"
    fi

    strelka2_vcf=$(dx upload ${pair_id}.strelka2.vcf.gz --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output strelka2_vcf "$strelka2_vcf" --class=file
}
