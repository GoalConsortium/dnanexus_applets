#!/bin/bash
# Union_VCF 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$strelka_vcf" -o strelka.vcf.gz
    dx download "$platypus_vcf" -o platypus.vcf.gz
    dx download "$freebayes_vcf" -o fb.vcf.gz
    dx download "$reference_files" -o reference.tar.gz

    tar xvfz reference.tar.gz
    gunzip reference/genome.fa.gz

    if [[ -z "$shimmer_vcf" && -z "$mutect_vcf" ]]
    then
        list=(strelka.vcf.gz platypus.vcf.gz fb.vcf.gz)
    else
        dx download "$shimmer_vcf" -o shimmer.vcf.gz
        dx download "$mutect_vcf" -o mutect.vcf.gz
        list=(strelka.vcf.gz platypus.vcf.gz fb.vcf.gz shimmer.vcf.gz mutect.vcf.gz)
    fi
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 perl /usr/local/bin/unionvcf.pl union.header.vcf $list
    docker run -v ${PWD}:/data docker.io/goalconsortium/alignment:v1 sh -c "perl /usr/local/bin/vcfsorter.pl reference/genome.dict int.vcf | bgzip > ${pair_id}.union.vcf.gz"

    union_vcf=$(dx upload ${pair_id}.union.vcf.gz --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output union_vcf "$union_vcf" --class=file
}
