#!/bin/bash
# varscan 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of normalbam: '$normalbam'"
    echo "Value of tumorbam: '$tumorbam'"
    echo "Value of reference: '$reference'"
    echo "Value of options: '$options'"


    dx download "$normalbam" -o normalbam
    dx download "$tumorbam" -o tumorbam
    dx download "$reference" -o reference


    mkdir out
    /usr/bin/samtools_1.2/samtools mpileup -C50 -f reference tumorbam > tmpileup
    /usr/bin/samtools_1.2/samtools mpileup -C50 -f reference normalbam > nmpileup
    java -jar /usr/bin/VarScan.v2.4.1.jar somatic tmpileup nmpileup out --output-vcf 1
    tar cf out.tar out
    gzip out.tar

    bam_filename=$(dx describe --name "${tumorbam}")
    bam_filename_prefix=${bam_filename%.bam}

    varscanresults=$(dx upload out.tar.gz --destination $bam_filename_prefix.varscan.tar.gz --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output varscanresults "$varscanresults" --class=file
}
