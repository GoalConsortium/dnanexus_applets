#!/bin/bash
# stringTie 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of bam: '$bam'"
    echo "Value of gtf: '$gtf'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$bam" -o bam

    dx download "$gtf" -o gtf
    gzfile=$(dx describe --name "${bam}")
    gzfile_filename_prefix=${gzfile%.bam}


    /usr/bin/stringtie bam -p 2 -G gtf -B -e > denovo.gtf
    tar cf outdir.tar *.ctab denovo.gtf
    gzip outdir.tar

    outdir=$(dx upload outdir.tar.gz --destination $gzfile_filename_prefix.tar.gz --brief)
  
    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output outdir "$outdir" --class=file
}
